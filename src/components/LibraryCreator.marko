import path from 'path'

class {
  onCreate(input) {
    this.state = {
      addAsGroup: false,
      groupName: '',
      searchDepth: '',
      hierarchyDepth: '',
      titles: input.directories.map(v=>path.basename(v)),
      shouldAdd: input.directories.map(v=>true),
      shouldIgnoreHidden: input.directories.map(v=>true),
    }
  }
  close() {
    this.emit('close')
  }
  add() {
    this.emit('create', this.state.shouldAdd.map((v,i)=>{
      if (!v) {
        return null
      }
      return {
        title: this.state.titles[i],
        folder: this.input.directories[i],
        searchDepth: this.state.searchDepth !== '' ? this.state.searchdepth : -1,
        hierarchyDepth: this.state.hierarchyDepth||0,
        ignoreHidden: this.state.shouldIgnoreHidden[i],
      }
    }).filter(v=>v!==null))
  }
  setSearchDepth(e) {
    this.state.searchDepth = Number(e.target.value)
  }
  setHierarchyDepth(e) {
    this.state.hierarchyDepth = Number(e.target.value)
  }
  setLibraryName(index, e) {
    this.state.titles[index] = e.target.value
    this.setStateDirty('titles')
  }
  setLibraryAdd(index, e) {
    this.state.shouldAdd[index] = e.target.checked
    this.setStateDirty('shouldAdd')
  }
  setIgnoreHidden(index, e) {
    this.state.shouldIgnoreHidden[index] = e.target.checked
    this.setStateDirty('shouldIgnoreHidden')
  }
}

style {
  .LibraryCreator {
  }
  .LibraryCreator__Info {
    color: #999;
  }
  .LibraryCreator__Settings {
    margin: .5em;
    padding: .5em;
  }
  .LibraryCreator__Settings__Item {
    display: flex;
    align-items: center;
  }
  .LibraryCreator__Settings__Item span {
    font-weight: bold;
    margin-right: .5em;
    min-width: 8em;
  }
  .LibraryCreator__Settings__Item input {
    width: 3em;
  }
  .LibraryCreator__Controls {
    display: flex;
    justify-content: flex-end;
  }
  .LibraryCreator__Controls__Button {
    background: var(--list-bg);
    color: var(--list-fg);
    padding: .5em;
    margin-left: .5em;
  }
}

context|{ t }| from='Locale'
  div.LibraryCreator
    div.LibraryCreator__Info
      Notification icon='info'
        p -- ${t('libraries.descriptions.library')}
    div.LibraryCreator__Settings
      div
        table
          tr
            th -- &nbsp;
            th -- ${t('library-creator.labels.library-title')}
            th -- &nbsp;
            th -- ${t('library-creator.labels.target-folder')}
            th -- ${t('library-creator.labels.ignore-hidden')}
          for|folder, folderIndex| of=input.directories
            tr
              td
                input type='checkbox' checked=state.shouldAdd[folderIndex] on-change('setLibraryAdd', folderIndex)
              td
                input value=state.titles[folderIndex] on-change('setLibraryName', folderIndex)
              td -- >
              td -- ${folder}
              td
                input type='checkbox' checked=state.shouldIgnoreHidden[folderIndex] on-change('setIgnoreHidden', folderIndex)
      label.LibraryCreator__Settings__Item
        span -- ${t('library-creator.labels.search-depth')}
        input type='number' value=state.searchDepth placeholder='-1' on-change('setSearchDepth')
        Notification icon='info' iconSize=2 noBorder
          span -- ${t('library-creator.descriptions.search-depth')}
      label.LibraryCreator__Settings__Item
        span -- ${t('library-creator.labels.hierarchy-depth')}
        input type='number' value=state.hierarchyDepth placeholder='0' on-change('setHierarchyDepth')
        Notification icon='info' iconSize=2 noBorder
          span -- ${t('library-creator.descriptions.hierarchy-depth')}
    div.LibraryCreator__Controls
      button.LibraryCreator__Controls__Button on-click('close') -- ${t('general.labels.cancel')}
      button.LibraryCreator__Controls__Button on-click('add') -- ${t('general.labels.add')}
