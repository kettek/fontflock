import path from 'path'

class {
  onCreate(input) {
    this.state = {
      title: input.library.title,
      folder: input.library.folder,
      searchDepth: input.library._data.searchDepth,
      hierarchyDepth: input.library._data.hierarchyDepth,
      ignoreHidden: input.library._data.ignoreHidden,
    }
  }
  close(save=false) {
    if (save === true) {
      this.save()
    }
    this.emit('close')
  }
  save() {
    ['title', 'folder', 'searchDepth', 'hierarchyDepth', 'ignoreHidden'].forEach(v => {
      if (this.state[v] !== this.input.library[v]) {
        this.input.library[v] = this.state[v]
      }
    })
  }
  setSearchDepth(e) {
    this.state.searchDepth = Number(e.target.value)
  }
  setHierarchyDepth(e) {
    this.state.hierarchyDepth = Number(e.target.value)
  }
  setTitle(e) {
    this.state.title = e.target.value
  }
  setIgnoreHidden(e) {
    this.state.ignoreHidden = e.target.checked
  }
}

style {
  .LibraryEditor {
  }
  .LibraryEditor__Info {
    color: #999;
  }
  .LibraryEditor__Settings {
    margin: .5em;
    padding: .5em;
  }
  .LibraryEditor__Settings__Item {
    display: flex;
    align-items: center;
  }
  .LibraryEditor__Settings__Item span {
    font-weight: bold;
    margin-right: .5em;
    min-width: 8em;
  }
  .LibraryEditor__Settings__Item input {
    width: 3em;
  }
  .LibraryEditor__Controls {
    display: flex;
    justify-content: flex-end;
  }
  .LibraryEditor__Controls__Button {
    background: var(--list-bg);
    color: var(--list-fg);
    padding: .5em;
    margin-left: .5em;
  }
}

context|{ t }| from='Locale'
  div.LibraryEditor
    div.LibraryEditor__Info
      Notification icon='info'
        p -- ${t('libraries.descriptions.library')}
    div.LibraryEditor__Settings
      label.LibraryEditor__Settings__Item
        span -- ${t('library-editor.labels.title')}
        input value=state.title placeholder=input.library.title on-change('setTitle')
        Notification icon='info' iconSize=2 noBorder
          span -- ${t('library-editor.descriptions.title')}
      label.LibraryEditor__Settings__Item
        span -- ${t('library-creator.labels.search-depth')}
        input type='number' value=state.searchDepth placeholder=input.library._data.searchDepth on-change('setSearchDepth')
        Notification icon='info' iconSize=2 noBorder
          span -- ${t('library-creator.descriptions.search-depth')}
      label.LibraryEditor__Settings__Item
        span -- ${t('library-creator.labels.hierarchy-depth')}
        input type='number' value=state.hierarchyDepth placeholder=input.library._data.hierarchyDepth on-change('setHierarchyDepth')
        Notification icon='info' iconSize=2 noBorder
          span -- ${t('library-creator.descriptions.hierarchy-depth')}
      label.LibraryEditor__Settings__Item
        span -- ${t('library-creator.labels.ignore-hidden')}
        input type='checkbox' checked=state.ignoreHidden placeholder=input.library._data.ignoreHidden on-change('setIgnoreHidden')
        Notification icon='info' iconSize=2 noBorder
          span -- ${t('library-creator.descriptions.ignore-hidden')}
    div.LibraryEditor__Controls
      button.LibraryEditor__Controls__Button on-click('close') -- ${t('general.labels.close')}
      button.LibraryEditor__Controls__Button on-click('close', true) -- ${t('general.labels.save-and-close')}
      button.LibraryEditor__Controls__Button on-click('save') -- ${t('general.labels.apply')}
