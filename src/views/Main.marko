import { ipcRenderer } from 'electron'
import * as fs from 'fs'
import * as path from 'path'
import { remote, shell } from 'electron'
import * as fontManager from '../../build/fontmanager.node'
import * as _Config from '../models/_Config'

import SystemFonts from 'models/_SystemFonts'

class {
  onCreate() {
    _Config.load({
      win: {
        x: 0,
        y: 0,
        width: 1280,
        height: 720,
        fullscreen: false,
      },
    })
    this.state = {
      awaitingFonts: true,
      fontsList: [],
      text: 'The slow fat fox waits for the roll20',
      fontSize: 10,
      fontSizeUnits: 'pt',
    }

    // Add hook for app closing.
    ipcRenderer.on('app-close', _ => {
      this.close()
    })
    SystemFonts.on('loaded', this.onSystemFontsLoaded = this.onSystemFontsLoaded.bind(this))
  }
  onDestroy() {
    SystemFonts.off('loaded', this.onSystemFontsLoaded)
  }
  onMount() {
    SystemFonts.load()
  }
  onSystemFontsLoaded(e) {
    this.state.fontsList = [ SystemFonts.families ]
  }
  async close() {
    // Do cleanup
    // return // return early on failure
    await _Config.save(true)
    ipcRenderer.send('closed')
  }
  setText(e) {
    this.state.text = e.target.value
  }
  setSize(e) {
    this.state.fontSize = Number(e.target.value)
  }
  setUnits(e) {
    this.state.fontSizeUnits = e.target.value
  }
  revealFont(fontPath) {
    shell.showItemInFolder(fontPath)
  }
}

style {
  :root {
    --primary: #51789d;
    --secondary: #0c1a13;
    --tertiary: #667e94;
    --quaternary: #f3e5ec;
    --list-fg: #d3d3d3;
    --list-bg: #242424;
    --list2-fg: #c3c3c3;
    --list2-bg: #141414;
  }
  @font-face {
    font-family: 'PT Sans';
    font-style: normal;
    font-weight: 400;
    src: url('../assets/fonts/PTSans-Regular.ttf');
  }
  @font-face {
    font-family: 'PT Sans';
    font-style: italic;
    font-weight: 400;
    src: url('../assets/fonts/PTSans-Italic.ttf');
  }
  @font-face {
    font-family: 'PT Sans';
    font-style: normal;
    font-weight: 700;
    src: url('../assets/fonts/PTSans-Bold.ttf');
  }
  @font-face {
    font-family: 'PT Sans';
    font-style: italic;
    font-weight: 700;
    src: url('../assets/fonts/PTSans-BoldItalic.ttf');
  }
  * {
    box-sizing: border-box;
  }
  html {
    height: 100%;
  }
  body {
    background-color: black;
    color: var(--secondary);
    margin: 0;
    height: 100%;
    display: grid;
    grid-template-rows: auto minmax(0, 1fr);
    grid-template-columns: minmax(0, 1fr);
    overflow: hidden;
    font-family: 'PT Sans', sans-serif;
  }
  [draggable] {
    user-select: none;
  }
  button {
    border: 0;
    border-radius: 0;
    background: #040404;
    color: #c2c2c2;
  }
  input, select {
    background: #040404;
    color: #c2c2c2;
    border: 1px solid transparent;
    padding: .25em;
    margin: .1em;
  }
  .Main {
    display: grid;
    grid-template-rows: minmax(0, 1fr);
    grid-template-columns: auto minmax(0, 1fr);
  }
  .Main__Left {
    display: grid;
    grid-template-rows: minmax(0, 1fr);
    grid-template-columns: minmax(0, 1fr);
  }
  .Main__Right {
    display: grid;
    grid-template-rows: auto minmax(0, 1fr);
    grid-template-columns: minmax(0, 1fr);
  }
  .Fonts {
    display: grid;
    grid-template-columns: minmax(0, 1fr);
    grid-template-rows: minmax(0, 1fr);
    overflow: auto;
  }
  .Fonts__Table {
    position: relative;
    border-collapse: collapse;
  }
  .Fonts__Header th {
    background: var(--list-bg);
    color: var(--list-fg);
    position: sticky;
    top: 0;
  }
  .Fonts__FamilyName {
    background: var(--list2-bg);
  }
  .Fonts__FamilyName th {
    background: var(--list2-bg);
    color: var(--list2-fg);
    position: sticky;
    text-align: left;
    top: 2.75ex;
  }
  .FontSettings {
    display: grid;
    grid-template-columns: minmax(0, 1fr) auto auto;
    grid-template-rows: minmax(0, 1fr);
  }
  .FontGroup {
  }
  .FontGroup__Entry { /* regular, bold, etc. */
    background: var(--list2-bg);
    color: var(--list2-fg);
  }
  .FontGroup__Entry__Example {
    color: black;
    background: white;
    font-size: 20em;
  }
}

Titlebar title='fontflock'
  @menu
    div.Titlebar__Controls__Button -- a button
div.Main
  div.Main__Left
    div -- something
  div.Main__Right
    div.FontSettings
      input value=state.text on-input('setText')
      input style='width:3em' type='number' value=state.fontSize on-input('setSize')
      select on-change('setUnits')
        option value='pt' selected=state.fontSizeUnits=='pt' -- pt
        option value='px' selected=state.fontSizeUnits=='px' -- px
    div.Fonts
      table.Fonts__Table
        tbody
          for|fontGroup, fontGroupIndex| of=state.fontsList
            tr class='Fonts__Header'
              th -- Example Text
              th -- Info
              th -- Controls
            for|fontFamilyName, fontFamily| in=fontGroup
              tr class='Fonts__FamilyName'
                th -- ${fontFamilyName}
              for|fontEntry, fontIndex| of=fontFamily.entries
                $ console.log(fontEntry)
                tr.FontGroup__Entry key=fontIndex
                  td.FontGroup__Entry__Example style={
                    'font-family': fontFamilyName,
                    'font-size': state.fontSize+state.fontSizeUnits,
                    'font-weight': fontEntry.weight+'',
                    'font-style': fontEntry.italic?'italic':'',
                  }
                    div style={overflow: 'auto'} -- ${state.text}
                  td.FontGroup__Entry__Properties
                    table
                      tbody
                        tr
                          td -- ${fontEntry.weight}
                          td -- ${fontEntry.italic?'i':''}
                  td.FontGroup__Entry__Controls
                    button on-click('revealFont', fontEntry.path) -- reveal
    
